// GENERATED by @edgedb/generate v0.4.1

import * as $ from "../reflection";
import * as _ from "../imports";
import type * as _std from "./std";
import type * as _Integration from "./Integration";
import type * as _User from "./User";
export type $RelationλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "integration": $.LinkDesc<_Integration.$Base, $.Cardinality.One, {}, false, false,  false, false>;
  "user": $.LinkDesc<_User.$Base, $.Cardinality.One, {}, false, false,  false, false>;
}>;
type $Relation = $.ObjectType<"UserIntegration::Relation", $RelationλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
  {user: {__element__: _User.$Base, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },integration: {__element__: _Integration.$Base, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $Relation = $.makeType<$Relation>(_.spec, "8e0fbf4a-c8bd-11ee-b2d4-1331c5c49ecb", _.syntax.literal);

const Relation: $.$expr_PathNode<$.TypeSet<$Relation, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Relation, $.Cardinality.Many), null);



export { $Relation, Relation };

type __defaultExports = {
  "Relation": typeof Relation
};
const __defaultExports: __defaultExports = {
  "Relation": Relation
};
export default __defaultExports;
