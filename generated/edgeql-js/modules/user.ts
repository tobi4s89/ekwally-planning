// GENERATED by @edgedb/generate v0.4.1

import * as $ from "../reflection";
import * as _ from "../imports";
import type * as _std from "./std";
import type * as _auth from "./ext/auth";
import type * as _userIntegration from "./userIntegration";
export type $UserλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "identity": $.LinkDesc<_auth.$Identity, $.Cardinality.One, {}, true, false,  false, false>;
  "<user[is userIntegration::UserIntegration]": $.LinkDesc<_userIntegration.$UserIntegration, $.Cardinality.Many, {}, false, false,  false, false>;
  "<user": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $User = $.ObjectType<"user::User", $UserλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
  {identity: {__element__: _auth.$Identity, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $User = $.makeType<$User>(_.spec, "5e62dfee-ae8b-11ee-a286-77424e87291a", _.syntax.literal);

const User: $.$expr_PathNode<$.TypeSet<$User, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($User, $.Cardinality.Many), null);

export type $AccountλShape = $.typeutil.flatten<$UserλShape & {
  "first_name": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "last_name": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
}>;
type $Account = $.ObjectType<"user::Account", $AccountλShape, null, [
  ...$User['__exclusives__'],
]>;
const $Account = $.makeType<$Account>(_.spec, "5e69fb3a-ae8b-11ee-87d6-bb9742b1ba39", _.syntax.literal);

const Account: $.$expr_PathNode<$.TypeSet<$Account, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Account, $.Cardinality.Many), null);

export type $currentUserλShape = $.typeutil.flatten<$UserλShape & {
}>;
type $currentUser = $.ObjectType<"user::currentUser", $currentUserλShape, null, [
  ...$User['__exclusives__'],
]>;
const $currentUser = $.makeType<$currentUser>(_.spec, "5e69d13c-ae8b-11ee-8c14-9fd771456b9c", _.syntax.literal);

const currentUser: $.$expr_PathNode<$.TypeSet<$currentUser, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($currentUser, $.Cardinality.Many), null);

const $user__globals: {  currentUser: _.syntax.$expr_Global<
              // "user::currentUser",
              $currentUser,
              $.Cardinality.Many
              >} = {  currentUser: _.syntax.makeGlobal(
              "user::currentUser",
              $.makeType(_.spec, "5e69d13c-ae8b-11ee-8c14-9fd771456b9c", _.syntax.literal),
              $.Cardinality.Many) as any};



export { $User, User, $Account, Account, $currentUser, currentUser };

type __defaultExports = {
  "User": typeof User;
  "Account": typeof Account;
  "currentUser": typeof currentUser;
  "global": typeof $user__globals
};
const __defaultExports: __defaultExports = {
  "User": User,
  "Account": Account,
  "currentUser": currentUser,
  "global": $user__globals
};
export default __defaultExports;
